# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-custom-container?tabs=dotnet&pivots=container-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Create a GitHub Personal access token with "repo" and "read:packages" permissions.
#
# 4. Create three app settings on your Azure Web app:
#       DOCKER_REGISTRY_SERVER_URL: Set this to "https://ghcr.io"
#       DOCKER_REGISTRY_SERVER_USERNAME: Set this to the GitHub username or organization that owns the repository
#       DOCKER_REGISTRY_SERVER_PASSWORD: Set this to the value of your PAT token from the previous step
#
# 5. Change the value for the AZURE_WEBAPP_NAME.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy a container to an Azure Web App

env:
  GH_ACCESS_TOKEN: ${{secrets.CR_PAT}}

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  infra_init:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login on Azure CLI
      uses: azure/login@v1.1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: Set up Azure Infra from IaC
      id: infra_setup
      run: |
          bash ${GITHUB_WORKSPACE}/infrastructure/init-infrastructure.sh
        
  build:
    runs-on: ubuntu-latest
    needs: infra_init
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container images to registry
        run: |  
          docker-compose -f docker-compose.yml -f build.docker-compose.yml build
          docker-compose -f docker-compose.yml -f build.docker-compose.yml push

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Configure the Webapp to Use the New Images
        run: bash ${GITHUB_WORKSPACE}/infrastructure/deploy-infrastructure.sh
        env:
          MONGODB_CONNECTION: ${{ steps.infra_setup.output.MONGODB_CONNECTION }}
          AI_KEY: ${{ steps.infra_setup.output.AI_KEY }}
          AI_CONNECTION: ${{ steps.infra_setup.output.AI_CONNECTION }}
          
