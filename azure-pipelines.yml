trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    jobs:
    - job: 'BuildAndpublish'
      displayName: 'Build and Publish'
      steps:
        - task: DockerCompose@0
          inputs:
            containerregistrytype: 'Container Registry'
            dockerRegistryEndpoint: 'GitHub Container Registry'
            dockerComposeFile: '**/docker-compose.yml'
            additionalDockerComposeFiles: 'build.docker-compose.yml'
            action: 'Build services'
            additionalImageTags: '$(Build.BuildNumber)'
        - task: DockerCompose@0
          inputs:
            containerregistrytype: 'Container Registry'
            dockerRegistryEndpoint: 'GitHub Container Registry'
            dockerComposeFile: '**/docker-compose.yml'
            additionalDockerComposeFiles: 'build.docker-compose.yml'
            action: 'Push services'
            additionalImageTags: '$(Build.BuildNumber)'

  - stage: DeployProd
    dependsOn: build
    jobs:
    - deployment: infrastructure
      environment: production
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self
              - task: Docker@2
                inputs:
                  containerRegistry: 'GitHub Container Registry'
                  command: 'login'
              - bash: sed -i "s/latest/$(Build.BuildNumber)/" ./docker-compose.yml
              - task: AzureCLI@2
                inputs:
                  azureSubscription: 'fabrikam-sp-for-ado'
                  scriptType: 'bash'
                  scriptLocation: 'scriptPath'
                  scriptPath: './infrastructure/ado-pipelines.deploy-infrastructure.sh'
                env:
                  CR_PAT: $(CR_PAT)
              - task: AzureCLI@2
                name: getString
                inputs:
                  azureSubscription: 'fabrikam-sp-for-ado'
                  scriptType: bash
                  scriptLocation: 'inlineScript'
                  inlineScript: |
                    MongoString=$(az cosmosdb keys list -n "fabrikam-cdb-aes" -g "fabrikam-rg-aes" --type connection-strings --query "connectionStrings[?description=='Primary MongoDB Connection String'].connectionString" | tr -d '\n',' ','[',']','\"' | sed s/\?/contentdb\?/)
                    echo "##vso[task.setvariable variable=MONGODB_CONNECTION]$MongoString"
              - task: Docker@2
                inputs:
                  containerRegistry: 'GitHub Container Registry'
                  command: 'login'
              - bash: |
                  echo $MONGODB_CONNECTION
                  docker run --rm -e MONGODB_CONNECTION=$(MONGODB_CONNECTION) ghcr.io/andrewsutliff-insight/fabrikam-init

